<!--
This launch file  provides a tool to send coordinates as goal. It requires real GPS, IMU and odom
data to initialize.

Subscribes to:
/gps/fix (sensor_msgs/NavSatFix)
/imu/data (sensor_msgs/Imu)
/odometry/filtered (nav_msgs/Odometry)

Publishes:
/latlong_goal_node/goal_xy (geometry_msgs/PoseStamped)

Services:
/latlong_goal_node/AddLatlongGoal

More info:
http://w2iki.ros.org/robot_localization#navsat_transform_node
http://wiki.ros.org/robot_localization/Tutorials/GPS%20Integration

-->

<launch>
    <arg name="yaw_offset" default="0" />

    <node pkg="robot_localization" type="navsat_transform_node" name="latlong_goal_converter_node" clear_params="true">
        <param name="magnetic_declination_radians" value="0"/>
        <param name="roll_offset" value="0"/>
        <param name="pitch_offset" value="0"/>
        <!--<param name="yaw_offset" value="$(arg yaw_offset)" />-->
        <param name="yaw_offset" value="3.9270"/>
        <param name="zero_altitude" value="true"/>
        <param name="delay" value="4"/>

        <param name="broadcast_utm_transform" value="false" />

        <!-- intial position data -->
        <remap from="/odometry/filtered" to="/odom" />

        <!-- intial position at the beginning AND converter input -->
        <remap from="/gps/fix" to="~convert_latlong" />

        <remap from="/imu/data" to="/imu/zero" />

        <!-- converted position, to be sent back to latlong_goal_node -->
        <remap from="/odometry/gps" to="~convert_xy" />
    </node>

    <node pkg="capra_gps" type="latlong_goal_node.py" name="latlong_goal_node" output="screen" >
        <remap from="~convert_xy" to="/latlong_goal_converter_node/convert_xy" />
        <remap from="~convert_latlong" to="/latlong_goal_converter_node/convert_latlong" />
    </node>
</launch>